"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5272],{35318:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(27378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=c(r),d=a,f=u["".concat(s,".").concat(d)]||u[d]||l[d]||o;return r?n.createElement(f,i(i({ref:t},m),{},{components:r})):n.createElement(f,i({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},39614:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(25773),a=(r(27378),r(35318));const o={sidebar_position:2},i="Temperature + MQTT",p={unversionedId:"samples/temperature-mqtt",id:"samples/temperature-mqtt",title:"Temperature + MQTT",description:"This sample uses an ESP32-C3 board Adafruit QT Py C3",source:"@site/docs/samples/temperature-mqtt.mdx",sourceDirName:"samples",slug:"/samples/temperature-mqtt",permalink:"/devicescript/samples/temperature-mqtt",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Blinky",permalink:"/devicescript/samples/blinky"},next:{title:"Copy Paste Button",permalink:"/devicescript/samples/copy-paste-button"}},s={},c=[],m={toc:c},u="wrapper";function l(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"temperature--mqtt"},"Temperature + MQTT"),(0,a.kt)("p",null,"This sample uses an ESP32-C3 board ",(0,a.kt)("a",{parentName:"p",href:"/devices/esp32/adafruit-qt-py-c3"},"Adafruit QT Py C3"),"\nand a ",(0,a.kt)("a",{parentName:"p",href:"https://www.adafruit.com/product/4636"},"SHTC3 sensor")," to publish a temperature reading to\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://www.mqtt-dashboard.com/"},"HiveMQ public MQTT broker")," every minute."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import "@dsboard/adafruit_qt_py_c3"\nimport { deviceIdentifier } from "@devicescript/core"\nimport { startMQTTClient } from "@devicescript/net"\nimport { startSHTC3 } from "@devicescript/drivers"\nimport { schedule } from "@devicescript/runtime"\n\n// mqtt settings\nconst mqtt = await startMQTTClient({\n    host: "broker.hivemq.com",\n    proto: "tcp",\n    port: 1883,\n})\nconst topic = `devs/temp/${deviceIdentifier("self")}`\nconsole.log({ topic })\n\n// sensors\nconst { temperature } = await startSHTC3()\n// pushing temperature every minute\nschedule(async () => {\n    const t = await temperature.reading.read()\n    console.data({ t })\n    await mqtt.publish(topic, { t })\n})\n')),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"This is a public MQTT broker, anyone can listen to the messages.")))}l.isMDXComponent=!0}}]);